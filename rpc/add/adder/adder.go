// Code generated by goctl. DO NOT EDIT!
// Source: add.proto

//go:generate mockgen -destination ./adder_mock.go -package adder -source $GOFILE

package adder

import (
	"context"

	"bookstore/rpc/add/add"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	AddReq   = add.AddReq
	AddResp  = add.AddResp
	Request  = add.Request
	Response = add.Response

	Adder interface {
		Ping(ctx context.Context, in *Request) (*Response, error)
		Add(ctx context.Context, in *AddReq) (*AddResp, error)
	}

	defaultAdder struct {
		cli zrpc.Client
	}
)

func NewAdder(cli zrpc.Client) Adder {
	return &defaultAdder{
		cli: cli,
	}
}

func (m *defaultAdder) Ping(ctx context.Context, in *Request) (*Response, error) {
	client := add.NewAdderClient(m.cli.Conn())
	return client.Ping(ctx, in)
}

func (m *defaultAdder) Add(ctx context.Context, in *AddReq) (*AddResp, error) {
	client := add.NewAdderClient(m.cli.Conn())
	return client.Add(ctx, in)
}
